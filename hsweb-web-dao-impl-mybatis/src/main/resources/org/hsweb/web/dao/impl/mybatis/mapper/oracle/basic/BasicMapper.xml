<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BasicMapper">
    <sql id="buildWhereV2">
        ${@org.hsweb.web.mybatis.builder.DefaultSqlParamBuilder@instance().buildWhere($fieldsInfo,#this['_parameter'].terms)}
    </sql>
    <sql id="buildSelectFieldV2">
        ${@org.hsweb.web.mybatis.builder.DefaultSqlParamBuilder@instance().buildSelectFields($fieldsInfo,#this['_parameter'])}
    </sql>
    <!--通用查询条件-->
    <sql id="buildWhere">
        <include refid="BasicMapper.buildWhereV2"/>
    </sql>
    <!--生成查询字段-->
    <sql id="buildSelectField">
        <include refid="BasicMapper.buildSelectFieldV2"/>
    </sql>

    <!--生成修改字段-->
    <sql id="buildUpdateField">
        <set>
            <choose>
                <!--指定要修改的字段-->
                <when test="includes!=null and includes.size()>0">
                    <foreach item="item" index="index" collection="includes" open="" separator="," close="">
                        <if test="item in $fields">
                            ${item}=#{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                        </if>
                    </foreach>
                </when>
                <!--指定不修改的字段-->
                <when test="(includes==null or includes.size()==0) and excludes!=null and excludes.size()>0">
                    <foreach item="item" index="index" collection="$fields" open=" " separator="," close="">
                        <if test="!(item in excludes)">
                            ${item}= #{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                        </if>
                    </foreach>
                </when>
                <!--修改所有-->
                <otherwise>
                    <foreach item="item" index="index" collection="$fields" open=" " separator="," close="">
                        <if test="data[item] != null">
                            ${item}=#{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                        </if>
                    </foreach>
                </otherwise>
            </choose>
        </set>
    </sql>

    <!--生成插入字段-->
    <sql id="buildInsertField">
        <choose>
            <when test="includes!=null and includes.size()>0">
                <foreach item="item" index="index" collection="includes" open="(" separator="," close=")">
                    <if test="item in $fields">${item}</if>
                </foreach>
            </when>
            <when test="(includes==null or includes.size()==0) and excludes!=null and excludes.size()>0">
                <foreach item="item" index="index" collection="$fields" open="(" separator="," close=")">
                    <if test="!(item in excludes)">${item}</if>
                </foreach>
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="$fields" open="(" separator="," close=")">${item}</foreach>
            </otherwise>
        </choose>
    </sql>

    <!--生成插入值-->
    <sql id="buildInsertValues">
        <choose>
            <when test="includes!=null and includes.size()>0">
                <foreach item="item" index="index" collection="includes" open="(" separator="," close=")">
                    <if test="item in $fields">
                        #{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                    </if>
                </foreach>
            </when>
            <when test="(includes==null or includes.size()==0) and excludes!=null and excludes.size()>0">
                <foreach item="item" index="index" collection="$fields" open="(" separator="," close=")">
                    <if test="!(item in excludes)">
                        #{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                    </if>
                </foreach>
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="$fields" open="(" separator="," close=")">
                    #{data.${$fieldsInfo[item].property==null?item:$fieldsInfo[item].property},jdbcType=${$fieldsInfo[item]['jdbcType']}}
                </foreach>
            </otherwise>
        </choose>
    </sql>

    <!--生成排序字段-->
    <sql id="buildSortField">
        ${@org.hsweb.web.mybatis.builder.DefaultSqlParamBuilder@instance().buildOrder($fieldsInfo,$tableName,#this['_parameter'])}
    </sql>

    <!--生成查询sql-->
    <sql id="buildSelectSql">
        select
        <include refid="BasicMapper.buildSelectField"/>
        from ${$tableName}
        <where>
            <include refid="BasicMapper.buildWhereV2"/>
            <!--<include refid="BasicMapper.buildWhere"/>-->
        </where>
        <include refid="BasicMapper.buildSortField"/>
    </sql>

    <!--生成InsertSql-->
    <sql id="buildInsertSql">
        insert into ${$tableName}
        <include refid="BasicMapper.buildInsertField"/>
        values
        <include refid="BasicMapper.buildInsertValues"/>
    </sql>

    <!--生成UpdateSql-->
    <sql id="buildUpdateSql">
        update ${$tableName}
        <include refid="BasicMapper.buildUpdateField"/>
        <where>
            <include refid="BasicMapper.buildWhereV2"/>
            <!--<include refid="BasicMapper.buildWhere"/>-->
            <if test="terms.size()==0">
                u_id=#{data.uId}
            </if>
        </where>
    </sql>

    <!--生成查询数量sql-->
    <sql id="buildTotalSql">
        select count(0) as "total" from ${$tableName}
        <where>
            <include refid="BasicMapper.buildWhereV2"/>
            <!--<include refid="BasicMapper.buildWhere"/>-->
        </where>
    </sql>
</mapper>
